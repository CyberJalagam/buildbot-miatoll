#!/bin/bash
cd /tmp/rom # Depends on where source got synced
rm -rf .repo & # lets remove unnecessary things, so that no storage issue can occur

# Normal build steps

sudo apt update && sudo apt upgrade && sudo apt install git-core gnupg flex bison gperf build-essential zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc unzip bc ccache git imagemagick lib32readline-dev lib32z1-dev liblz4-tool pngquant libncurses5-dev libsdl1.2-dev libssl-dev libxml2 lzop pngcrush rsync schedtool squashfs-tools openjdk-8-jdk p7zip-full meld brotli qt5-qmake android-tools-adb android-tools-fastboot texinfo maven swapspace m4 libncurses5 libwxgtk3.0-gtk3-dev openjdk-8-jre libc6-dev lib32readline6-dev tmux screen w3m ncftp adb fastboot python default-jdk --yes
source build/envsetup.sh
export SAKURA_BUILD_TYPE=gapps
export SELINUX_IGNORE_NEVERALLOWS=true
lunch lineage_merlin-userdebug
export CCACHE_DIR=/tmp/ccache
export CCACHE_EXEC=$(which ccache)
export USE_CCACHE=1
ccache -M 20G
ccache -o compression=true
ccache -z

up(){
	curl --upload-file $1 https://transfer.sh/
}

make_metalava(){
	mka api-stubs-docs
	mka system-api-stubs-docs
	mka test-api-stubs-docs
}

make_rom(){
	make bacon -j20
	zip=$(up out/target/product/merlin/*zip)
	echo " "
	echo "$zip"
}

make_metalava && make_rom
sleep 10 && kill "$!"
